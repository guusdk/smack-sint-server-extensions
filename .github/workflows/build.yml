name: Build & Test

on: [pull_request]

env:
  OPENFIRE_VERSION: 4_8_1 # The version of Openfire to use, using underscores, to match artifact filenames in https://github.com/igniterealtime/Openfire/releases/


jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        java: [ 11, 17 ]
        distribution: [ temurin ] # We could add more here: temurin, adopt, liberica, microsoft, corretto
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK ${{ matrix.java }} ${{ matrix.distribution }}
        uses: actions/setup-java@v4
        with:
          java-version: ${{ matrix.java }}
          distribution: ${{ matrix.distribution }}
          cache: maven
      - name: Build with Maven # We install instead of package, because we want the result in the local mvn repo
        run: mvn package
      - name: Stash the built artifacts
        uses: actions/upload-artifact@v2
        if: ${{ matrix.java == 11}}
        with:
          name: smack-tests
          path: target/smack-sint-server-extensions-*-jar-with-dependencies.jar
          retention-days: 1
  test:
    name: Test
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout Openfire actions e.g. 'startCIServer'
        uses: actions/checkout@v4
        with:
          repository: igniterealtime/Openfire
          sparse-checkout: |
            .github
      - uses: actions/cache@v4
        id: cache
        with:
          path: openfire.tar.gz
          key: openfire-${{env.OPENFIRE_VERSION}}
      - name: Download Openfire
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          DOTTED_VERSION=$(echo ${{env.OPENFIRE_VERSION}} | tr _ .)
          curl -L https://github.com/igniterealtime/Openfire/releases/download/v$DOTTED_VERSION/openfire_${{env.OPENFIRE_VERSION}}.tar.gz -o openfire.tar.gz
      - name: Extract Openfire
        run: |
          tar -xzf openfire.tar.gz
      - name: Start CI server from distribution
        id: startCIServer
        uses: ./.github/actions/startserver-action
        with:
          distBaseDir: './openfire'
          domain: 'example.org'
          ip: '127.0.0.1'
      - name: Download the built artifacts
        uses: actions/download-artifact@v2
        with:
          name: smack-tests
          path: .
      - name: Run the tests
        run: |
          # Get the jar file by globbing on the version
          JAR_MATCHES=(smack-sint-server-extensions-*-jar-with-dependencies.jar)
          JARFILE=${JAR_MATCHES[0]}
          
          # Run the tests the same way the action does
          # Borrowing from:
          #  - https://github.com/XMPP-Interop-Testing/xmpp-interop-tests-action/blob/main/action.yml
          #  - https://github.com/igniterealtime/Openfire/blob/ddf144c4ff3b0f753c4087c1e197dfc2bab324a9/.github/workflows/continuous-integration-workflow.yml#L199-L205
          sudo echo "127.0.0.1 example.org" | sudo tee -a /etc/hosts
          java \
          -Dsinttest.service="example.org" \
          -Dsinttest.securityMode=disabled \
          -Dsinttest.replyTimeout=60000 \
          -Dsinttest.adminAccountUsername=admin \
          -Dsinttest.adminAccountPassword=admin \
          -Dsinttest.enabledConnections=tcp \
          -Dsinttest.dnsResolver=javax \
          -Dsinttest.disabledTests="EntityCapsTest,SoftwareInfoIntegrationTest,XmppConnectionIntegrationTest,StreamManagementTest,WaitForClosingStreamElementTest,IoTControlIntegrationTest,ModularXmppClientToServerConnectionLowLevelIntegrationTest" \
          -DlogDir=logs \
          -jar $JARFILE
        shell: bash
